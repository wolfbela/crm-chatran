version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: webapp
      POSTGRES_USER: lama
      POSTGRES_PASSWORD: JaimeLesChevaux
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - webapp-network
    restart: unless-stopped

  traefik:
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--global.checknewversion=false"
      - "--global.sendanonymoususage=false"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/acme.json:/acme.json
    networks:
      - webapp-network
    restart: unless-stopped

  webapp:
    build:
      context: ./webapp
      dockerfile: ../docker/Dockerfile
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=webapp
      - POSTGRES_USER=lama
      - POSTGRES_PASSWORD=JaimeLesChevaux
      - NODE_ENV=production
    depends_on:
      - postgres
    networks:
      - webapp-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webapp.rule=Host(`www.example.com`) || Host(`example.com`)"
      - "traefik.http.routers.webapp.entrypoints=websecure"
      - "traefik.http.routers.webapp.tls.certresolver=letsencrypt"
      - "traefik.http.routers.webapp-redirect.rule=Host(`example.com`)"
      - "traefik.http.routers.webapp-redirect.entrypoints=websecure"
      - "traefik.http.routers.webapp-redirect.middlewares=redirect-to-www"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.regex=^https://example.com/(.*)"
      - "traefik.http.middlewares.redirect-to-www.redirectregex.replacement=https://www.example.com/$${1}"
      - "traefik.http.services.webapp.loadbalancer.server.port=3000"
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  webapp-network:
    driver: bridge
