name: Deploy to Production

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: './webapp/package-lock.json'

      - name: Install dependencies
        run: |
          cd webapp
          npm ci

      - name: Run linter
        run: |
          cd webapp
          npm run lint

      - name: Build application
        run: |
          cd webapp
          npm run build

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./webapp
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_REGISTRY }}/webapp:latest
            ${{ secrets.DOCKER_REGISTRY }}/webapp:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /opt/webapp

            # Pull latest changes
            git pull origin main

            # Update Docker image
            docker-compose pull webapp

            # Restart services
            docker-compose up -d --no-deps webapp

            # Clean up old images
            docker image prune -f

      - name: Health check
        run: |
          sleep 30
          curl -f https://www.example.com || exit 1
